#!/bin/bash
cmd="$1"
shift

pragmas="pragma synchronous=off; pragma locking_mode=exclusive; pragma journal_mode=OFF;"
case "$cmd" in
q) 
	# Re-order and quote arguments to make it easier to run sqlite commands in fm
	last=`expr $# - 1`
	db="${!#}"
	qstr="${*:1:$last}"
	#echo "$qstr" 1>&2
	if [ "`basename $db`" != "db" ]; then
		exit 0
	fi
	sqlite3 -header -bail -separator '	' ${!#} <<EOM 
$pragmas
attach database 'db' as output;
$qstr
;
EOM
	status=$?
	if [ "$status" != "0" ]; then
		echo "sqlite3 returned $status; removing output db" 1>&2 
		rm -f db
	fi
	exit $status
	;;
cat)
	# Take a list of databases on stdin and cat them together using the schema and table name found in the first database. 

	output=db
	while read line; do
		if [ "`basename $line`" != "db" ]; then
			continue
        	fi
		echo "attach database '$line' as input;"
		if [ "$first" = "" ]; then
			table=`sqlite3 "$line" ".tables" | head -1`
			echo "Using table $table" 1>&2
			echo "$pragmas"
			echo "create table $table as select * from input.$table;"
			first=no
		else
			echo "insert into $table select * from input.$table;"
		fi
		echo 'detach database input;'
	done | tee .query | sqlite3 -bail $output 
	status=$?
	if [ "$status" != "0" ]; then
		rm -f $output
	fi
	exit $status
	;;
*)
	echo "Usage: $0 (q|cat)"
	exit 1
	;;
esac

